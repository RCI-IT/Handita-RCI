frontend_hr/
‚îú‚îÄ‚îÄ public/
‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îú‚îÄ‚îÄ assets/              # Gambar, logo, dll
‚îÇ   ‚îú‚îÄ‚îÄ components/          # Reusable UI components
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Button/
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ Table/
‚îÇ   ‚îú‚îÄ‚îÄ features/            # Modular fitur per domain
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ auth/
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ hooks/useAuth.ts
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ LoginPage.tsx
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ authService.ts
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ karyawan/
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ hooks/useKaryawanData.ts
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ components/KaryawanTable.tsx
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ karyawanService.ts
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ departemen/
‚îÇ   ‚îÇ       ‚îú‚îÄ‚îÄ hooks/useDepartemenData.ts
‚îÇ   ‚îÇ       ‚îú‚îÄ‚îÄ components/DepartemenTable.tsx
‚îÇ   ‚îÇ       ‚îî‚îÄ‚îÄ departemenService.ts
‚îÇ   ‚îú‚îÄ‚îÄ hooks/              # Global custom hooks
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ useWindowSize.ts
‚îÇ   ‚îú‚îÄ‚îÄ pages/              # Page-level components (routing target)
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Dashboard.tsx
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Login.tsx
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ KaryawanPage.tsx
‚îÇ   ‚îú‚îÄ‚îÄ routes/             # React Router config
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ index.tsx
‚îÇ   ‚îú‚îÄ‚îÄ services/           # Fetch API global (axios, fetcher, etc)
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ fetcher.ts
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ apiURL.ts
‚îÇ   ‚îú‚îÄ‚îÄ store/              # Zustand/Redux (jika pakai)
‚îÇ   ‚îú‚îÄ‚îÄ types/              # Global type declarations
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ employee.ts
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ auth.ts
‚îÇ   ‚îú‚îÄ‚îÄ utils/              # Fungsi helper umum
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ localStorage.ts
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ fileValidation.ts
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ numberOnly.ts
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ setCurrency.ts
‚îÇ   ‚îú‚îÄ‚îÄ App.tsx
‚îÇ   ‚îî‚îÄ‚îÄ main.tsx
‚îú‚îÄ‚îÄ .env
‚îú‚îÄ‚îÄ tsconfig.json
‚îú‚îÄ‚îÄ vite.config.ts
‚îî‚îÄ‚îÄ package.json



3. Dashboard Template + Routing Setup
pages/
‚îú‚îÄ‚îÄ Dashboard.tsx
‚îú‚îÄ‚îÄ Login.tsx
‚îú‚îÄ‚îÄ KaryawanPage.tsx
‚îî‚îÄ‚îÄ DepartemenPage.tsx


 Dashboard.tsx
tsx
Copy
Edit
import React from 'react';
import { Link } from 'react-router-dom';

const Dashboard = () => {
  return (
    <div>
      <h2>Dashboard HR</h2>
      <nav>
        <Link to="/karyawan">Karyawan</Link> | 
        <Link to="/departemen">Departemen</Link>
      </nav>
    </div>
  );
};

export default Dashboard;


 Login.tsx (sederhana)
tsx
Copy
Edit
import React, { useState } from 'react';
import { useAuth } from '../features/auth/hooks/useAuth';

const Login = () => {
  const { handleLogin, error } = useAuth();
  const [user, setUser] = useState({ username: '', password: '' });

  return (
    <div>
      <h2>Login</h2>
      <input placeholder="Username" onChange={(e) => setUser({ ...user, username: e.target.value })} />
      <input placeholder="Password" type="password" onChange={(e) => setUser({ ...user, password: e.target.value })} />
      <button onClick={() => handleLogin(user.username, user.password)}>Login</button>
      {error && <p>{error}</p>}
    </div>
  );
};

export default Login;
‚ú® KaryawanPage.tsx & DepartemenPage.tsx
tsx
Copy
Edit
// KaryawanPage.tsx
import { KaryawanTable } from '../features/karyawan/components/KaryawanTable';
export default function KaryawanPage() {
  return (
    <div>
      <h2>Data Karyawan</h2>
      <KaryawanTable />
    </div>
  );
}
tsx
Copy
Edit
// DepartemenPage.tsx
import { DepartemenTable } from '../features/departemen/components/DepartemenTable';
export default function DepartemenPage() {
  return (
    <div>
      <h2>Data Departemen</h2>
      <DepartemenTable />
    </div>
  );
}
üîÅ 4. Routing Setup
‚ú® routes/index.tsx
tsx
Copy
Edit
import { Routes, Route } from 'react-router-dom';
import Dashboard from '../pages/Dashboard';
import Login from '../pages/Login';
import KaryawanPage from '../pages/KaryawanPage';
import DepartemenPage from '../pages/DepartemenPage';
import PrivateRoute from './PrivateRoute';

const AppRoutes = () => {
  return (
    <Routes>
      <Route path="/login" element={<Login />} />
      <Route path="/" element={<PrivateRoute><Dashboard /></PrivateRoute>} />
      <Route path="/karyawan" element={<PrivateRoute><KaryawanPage /></PrivateRoute>} />
      <Route path="/departemen" element={<PrivateRoute><DepartemenPage /></PrivateRoute>} />
    </Routes>
  );
};

export default AppRoutes;
‚ú® App.tsx
tsx
Copy
Edit
import { BrowserRouter } from 'react-router-dom';
import AppRoutes from './routes';

function App() {
  return (
    <BrowserRouter>
      <AppRoutes />
    </BrowserRouter>
  );
}

export default App;



Dengan setup ini kamu sudah punya:

‚úÖ Modular fitur karyawan & departemen
‚úÖ PrivateRoute untuk secure page
‚úÖ Dashboard HR simple & clean
‚úÖ Reuse data lewat localStorage + SWR

Kalau kamu mau:
üõ†Ô∏è Aku bisa bantu setup themeing, dark mode, atau layout dengan sidebar dan topbar juga.
üí° Atau langsung konversi ke Next.js kalau butuh SSR.